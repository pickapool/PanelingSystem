@inject IGroupService GroupService
@inject ISnackbar Snackbar
@inject IMemberService MemberService

<MudDialog>
    <DialogContent>
        <MudGrid Spacing="3" Class="pa-3 mr-4">
            <MudItem xs="12">
                <MudTextField @bind-Value="@Group.GroupThesisTitle" Label="Title" Variant="MudBlazor.Variant.Outlined" Margin="Margin.Dense" HelperText="Required*"/>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="@Group.Groupname" Label="Group name" Variant="MudBlazor.Variant.Outlined" Margin="Margin.Dense" HelperText="Required*"/>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="@Group.Program" Label="Program" Variant="MudBlazor.Variant.Outlined" Margin="Margin.Dense" HelperText="Required*"/>
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="@Group.Year" Label="Year" Variant="MudBlazor.Variant.Outlined" Margin="Margin.Dense" HelperText="Required*"/>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="MudBlazor.Variant.Filled" Color="Color.Primary" OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public GroupModel Group { get; set; }

    protected override void OnParametersSet()
    {
        if(Group == null)
            Group = new GroupModel();
    }

    private async Task Submit()
    {
        bool isAdd = Group.GroupId == 0? true : false;
        Task<GroupModel> t = Group.GroupId == 0 ? GroupService.PostGroupModel(Group) : GroupService.PutGroupModel(Group.GroupId, Group);
        await t;
        if(t.Status == TaskStatus.RanToCompletion)
        {
            if(isAdd)
            {
                MembersModel member = new();
                member.GroupId = t.Result.GroupId;
                member.UserId = GlobalClass.CurrentUserAccount.UserId;
                await MemberService.PostMembersModel(member);
            }
            MudDialog.Close(DialogResult.Ok(true));
            Extensions.ShowAlert("Group successfully save", MudBlazor.Variant.Filled, Snackbar, Severity.Success);
        }
    }
    void Cancel() => MudDialog.Cancel();
}