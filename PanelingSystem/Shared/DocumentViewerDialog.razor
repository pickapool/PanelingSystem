@using System.Net.Mime

<MudDialog>
    <DialogContent>
        @if (!IsLoading)
        {
            <div style="width: 100%; height: 800px; margin-top: 20px">
                <MudExFileDisplay HandleContentErrorFunc="@HandleContentError"
                    StreamUrlHandling="StreamUrlHandling.BlobUrl"
                    ParametersForSubControls="@GetParams()"
                    Dense="true" FileName="@FileName" ContentStream="@memoryStream" ContentType="@ContentType">
                </MudExFileDisplay>
        </div>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Close</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }
    [Parameter] public string FileName { get; set; } = string.Empty;
    [Parameter] public string ContentType { get; set; } = string.Empty;
    [Parameter] public byte[] FileStream { get; set; } 
    MemoryStream memoryStream = null;
    string base64 = string.Empty;
    bool IsLoading = true;
    protected override async Task OnInitializedAsync()
    {
        memoryStream = Extensions.ConvertToStream(FileStream);
        IsLoading = false;

    }
    private Task<MudExFileDisplayContentErrorResult> HandleContentError(IMudExFileDisplayInfos arg)
    {
        if (arg.ContentType.Contains("word"))
        {
            return Task.FromResult(MudExFileDisplayContentErrorResult
                .RedirectTo("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTiZiqnBKWS8NHcKbRH04UkYjrCgxUMz6sVNw&usqp=CAU", "image/png")
                .WithMessage("No word plugin found we display a sheep"));
        }
        return Task.FromResult(MudExFileDisplayContentErrorResult.Unhandled);
    }
    private IDictionary<string, object> GetParams()
    {
        return new Dictionary<string, object>
        {
            {nameof(MudExFileDisplayCode.Theme), "Light" },
            {nameof(MudExFileDisplayMarkdown.CodeBlockTheme), "Light" },
        };
    }
    void Cancel() => MudDialog.Cancel();
}
